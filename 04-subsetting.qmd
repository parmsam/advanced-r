---
title: "03-subsetting"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# General

## Subsetting atomic vectors

-   **Positive integers** return elements at specific positions

-   **Negative integers** exclude elements at the specified positions

-   **Logical vectors** select elements where the corresponding logical value is `TRUE`

    -   Follows **recycling rules** where the shorter of the two is recycled to the length of the longer. However, it is best avoided.

-   **Nothing** returns the original vector

-   **Zero** returns a zero-length vector

-   **Character vectors** return elements with matching names

## Subsetting data frames

-   When subsetting with a single index, they behave like lists and index the columns.

-   When subsetting with two indices, they behave like matrices

```{r}
head(iris[1]) # selects the first two columns
iris[1:3,] # selects the first three rows (and all the columns)
tibble::tibble(iris)["Species"] |> 
  head() # Subsetting a tibble with [ always returns a tibble
```

-   [`[[`](https://rdrr.io/r/base/Extract.html) is used for extracting single items, while `x$y` is a useful shorthand for `x[["y"]]`

    -   However, be aware that \$ does left to right partial matching

## Concepts

-   

-   \$ shorthand operator

# Useful functions

```{r}

```

# Exercises

What is the result of subsetting a vector with positive integers, negative integers, a logical vector, or a character vector?

What's the difference between \[, \[\[, and \$ when applied to a list?

When should you use drop = FALSE?

If x is a matrix, what does x\[\] \<- 0 do? How is it different from x \<- 0?

How can you use a named vector to relabel categorical variables?

Fix each of the following common data frame subsetting errors:

```{r}
mtcars[mtcars$cyl = 4, ]
mtcars[-1:4, ]
mtcars[mtcars$cyl <= 5]
mtcars[mtcars$cyl == 4 | 6, ]
```

Why does the following code yield five missing values? (Hint: why is it different from x\[NA_real\_\]?)

```{r}
x <- 1:5
x[NA]
#> [1] NA NA NA NA NA
```

What does upper.tri() return? How does subsetting a matrix with it work? Do we need any additional subsetting rules to describe its behaviour?

```{r}
x <- outer(1:5, 1:5, FUN = "*")
x[upper.tri(x)]
```

Why does mtcars\[1:20\] return an error? How does it differ from the similar mtcars\[1:20, \]?

Implement your own function that extracts the diagonal entries from a matrix (it should behave like diag(x) where x is a matrix).

What does df\[is.na(df)\] \<- 0 do? How does it work?

Brainstorm as many ways as possible to extract the third value from the cyl variable in the mtcars dataset.

Given a linear model, e.g., mod \<- lm(mpg \~ wt, data = mtcars), extract the residual degrees of freedom. Then extract the R squared from the model summary (summary(mod))

How would you randomly permute the columns of a data frame? (This is an important technique in random forests.) Can you simultaneously permute the rows and columns in one step?

How would you select a random sample of m rows from a data frame? What if the sample had to be contiguous (i.e., with an initial row, a final row, and every row in between)?

How could you put the columns in a data frame in alphabetical order?

# Playground
